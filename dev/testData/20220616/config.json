{
  "options": {
    "root": "/Users/jercle/git/azgo/azgoc/bin/run.cjs"
  },
  "_base": "@oclif/core@1.9.3",
  "debug": 0,
  "plugins": [
    {
      "options": {
        "root": "/Users/jercle/git/azgo/azgoc/bin/run.cjs"
      },
      "_base": "@oclif/core@1.9.3",
      "valid": true,
      "alreadyLoaded": false,
      "children": [],
      "warned": false,
      "type": "core",
      "root": "/Users/jercle/git/azgo/azgoc",
      "pjson": {
        "name": "azgoc",
        "version": "0.0.0",
        "description": "oclif rebuild of azgo cli, previously using yargs",
        "author": "Evan Colwell @jercle",
        "bin": {
          "azgoc": "./bin/run.cjs"
        },
        "homepage": "https://github.com/jercle/azgo",
        "license": "MIT",
        "main": "dist/index.js",
        "repository": "jercle/azgo",
        "type": "module",
        "files": [
          "/bin",
          "/dist",
          "/npm-shrinkwrap.json",
          "/oclif.manifest.json"
        ],
        "dependencies": {
          "@azure/container-registry": "^1.0.0",
          "@azure/identity": "^2.0.5",
          "@oclif/core": "^1",
          "@oclif/plugin-commands": "^2.2.0",
          "@oclif/plugin-help": "^5",
          "@oclif/plugin-plugins": "^2.0.1",
          "chalk": "^5.0.1",
          "date-fns": "^2.28.0",
          "esm": "^3.2.25",
          "inquirer": "^9.0.0",
          "moment": "^2.29.3",
          "yaml": "^2.1.1",
          "yeoman-environment": "^3.9.1"
        },
        "devDependencies": {
          "@oclif/test": "^2",
          "@types/chai": "^4",
          "@types/inquirer": "^8.2.1",
          "@types/mocha": "^9.0.0",
          "@types/node": "^16.9.4",
          "chai": "^4",
          "eslint": "^7.32.0",
          "eslint-config-oclif": "^4",
          "eslint-config-oclif-typescript": "^1.0.2",
          "globby": "^11",
          "mocha": "^9",
          "oclif": "^3",
          "shx": "^0.3.3",
          "ts-node": "^10.2.1",
          "tslib": "^2.3.1",
          "typescript": "^4.4.3"
        },
        "oclif": {
          "bin": "azgoc",
          "dirname": "azgoc",
          "commands": "./dist/commands",
          "additionalHelpFlags": [
            "-h"
          ],
          "plugins": [
            "@oclif/plugin-help",
            "@oclif/plugin-plugins",
            "@oclif/plugin-commands"
          ],
          "topicSeparator": " ",
          "topics": {},
          "hooks": {
            "init": "./dist/hooks/init/auth"
          },
          "update": {
            "node": {},
            "s3": {
              "templates": {
                "target": {
                  "baseDir": "<%- bin %>",
                  "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>",
                  "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>",
                  "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>"
                },
                "vanilla": {
                  "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>",
                  "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>",
                  "baseDir": "<%- bin %>",
                  "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version"
                }
              }
            }
          }
        },
        "scripts": {
          "build": "shx rm -rf dist && tsc -b",
          "lint": "eslint . --ext .ts --config .eslintrc",
          "postpack": "shx rm -f oclif.manifest.json",
          "posttest": "yarn lint",
          "prepack": "yarn build && oclif manifest && oclif readme",
          "test": "mocha --forbid-only \"test/**/*.test.ts\"",
          "version": "oclif readme && git add README.md"
        },
        "engines": {
          "node": ">=12.0.0"
        },
        "bugs": "https://github.com/jercle/azgo/issues",
        "keywords": [
          "oclif"
        ],
        "types": "dist/index.d.ts"
      },
      "name": "azgoc",
      "alias": "azgoc",
      "version": "0.0.0",
      "hooks": {
        "init": [
          "./dist/hooks/init/auth"
        ]
      },
      "manifest": {
        "version": "0.0.0",
        "commands": {
          "subs": {
            "id": "subs",
            "description": "Display current configured Azure CLI subscriptions",
            "strict": true,
            "pluginName": "azgoc",
            "pluginAlias": "azgoc",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "azgoc subs",
              "azgoc subs --setActive"
            ],
            "flags": {
              "setActive": {
                "name": "setActive",
                "type": "boolean",
                "char": "s",
                "description": "Set active subscription for Azure CLI",
                "allowNo": false
              }
            },
            "args": [],
            "_globalFlags": {}
          },
          "acr:list": {
            "id": "acr:list",
            "description": "describe the command here",
            "strict": true,
            "pluginName": "azgoc",
            "pluginAlias": "azgoc",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "<%= config.bin %> <%= command.id %>"
            ],
            "flags": {},
            "args": [],
            "_globalFlags": {}
          },
          "acr:vulns": {
            "id": "acr:vulns",
            "description": "Get all vulnerabilities related to container images",
            "strict": true,
            "pluginName": "azgoc",
            "pluginAlias": "azgoc",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "<%= config.bin %> <%= command.id %>"
            ],
            "flags": {
              "subscriptionId": {
                "name": "subscriptionId",
                "type": "option",
                "char": "s",
                "description": "\n      Subscription ID to use.\n      If not supplied, will use current active Azure CLI subscription.",
                "multiple": false,
                "default": "23310d40-a0d5-4446-8433-d0e6b151c2ab"
              },
              "outfile": {
                "name": "outfile",
                "type": "option",
                "char": "o",
                "description": "Save output to file",
                "multiple": false
              },
              "resyncData": {
                "name": "resyncData",
                "type": "boolean",
                "char": "r",
                "description": "Resync data from Azure",
                "allowNo": false
              },
              "showCounts": {
                "name": "showCounts",
                "type": "option",
                "char": "c",
                "description": "Only display counts of vulnerabilities, grouped by provided countByAttribute\n      Possible attributes include:\n      repository: Group by repository name\n      category: Can group by values such as 'Windows', 'Ubuntu', 'Debian', etc.\n      severity: Severity of vulnerability, such as 'High', 'Medium', 'Low', etc.\n      patchable: Whether or not the vulnerability is patchable\n      os: Operating System of affected container. e.g. 'Windows', 'Linux'\n      osDetails: Operating System details, e.g. 'Windows Server 2016', 'Ubuntu 16.04', etc.\n      imageDigest: Group by image digest\n      ",
                "multiple": false
              }
            },
            "args": [],
            "_globalFlags": {}
          },
          "acr:repos:list": {
            "id": "acr:repos:list",
            "description": "Get all container vulnerabilities",
            "strict": true,
            "pluginName": "azgoc",
            "pluginAlias": "azgoc",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "<%= config.bin %> <%= command.id %>"
            ],
            "flags": {
              "acrRegistry": {
                "name": "acrRegistry",
                "type": "option",
                "char": "a",
                "description": "ACR registry to use",
                "required": true,
                "multiple": false
              },
              "outfile": {
                "name": "outfile",
                "type": "option",
                "char": "o",
                "description": "Save output to file",
                "multiple": false
              },
              "includeManifests": {
                "name": "includeManifests",
                "type": "boolean",
                "char": "m",
                "description": "Include manifests in output",
                "allowNo": false
              },
              "resyncData": {
                "name": "resyncData",
                "type": "boolean",
                "char": "r",
                "description": "Resync data from Azure",
                "allowNo": false
              }
            },
            "args": [],
            "_globalFlags": {}
          },
          "generate:azure:app": {
            "id": "generate:azure:app",
            "description": "Create Azure pipeline and armconfig files from template",
            "strict": true,
            "pluginName": "azgoc",
            "pluginAlias": "azgoc",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "<%= config.bin %> <%= command.id %>"
            ],
            "flags": {
              "name": {
                "name": "name",
                "type": "option",
                "char": "n",
                "description": "Name of Application",
                "multiple": false
              }
            },
            "args": [],
            "_globalFlags": {}
          },
          "generate:azure:platform": {
            "id": "generate:azure:platform",
            "description": "Create Azure pipeline and armconfig files from template",
            "strict": true,
            "pluginName": "azgoc",
            "pluginAlias": "azgoc",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "<%= config.bin %> <%= command.id %>"
            ],
            "flags": {
              "name": {
                "name": "name",
                "type": "option",
                "char": "n",
                "description": "Name of application",
                "required": true,
                "multiple": false
              },
              "subscriptionId": {
                "name": "subscriptionId",
                "type": "option",
                "char": "s",
                "description": "\n      Subscription ID to use.\n      If not supplied, will use current active Azure CLI subscription.",
                "multiple": false,
                "default": "23310d40-a0d5-4446-8433-d0e6b151c2ab"
              },
              "appEnvironemnts": {
                "name": "appEnvironemnts",
                "type": "option",
                "char": "e",
                "description": "Comma separated list of application environments to build.\n      Eg: dev,prod\n      At least one is required as this creates the pipeline and\n      variable files per environment provided",
                "required": true,
                "multiple": false
              },
              "baseName": {
                "name": "baseName",
                "type": "option",
                "char": "b",
                "description": "Base name of the application.\n      Eg: \"DMZ\" or \"PROD\".\n      Creates naming convention of <baseName>-<envName>-<subEnv>-<appName>\n      If not specified, will be left out of the resource names",
                "multiple": false
              },
              "subEnvironments": {
                "name": "subEnvironments",
                "type": "option",
                "char": "d",
                "description": "Sub Environment of the application.\n      Eg: \"NonProd\" or \"Prod\".\n      Can be used for creating names such as:\n      Web-NonProd-Dev-AppName\n      Web-NonProd-Test-AppName\n      Web-Prod-Prod-AppName\n      Creates naming convention of <baseName>-<envName>-<subEnv>-<appName>\n      If not specified, will be left out of the resource names",
                "multiple": false
              },
              "ignoreDuplicates": {
                "name": "ignoreDuplicates",
                "type": "boolean",
                "char": "i",
                "description": "Ignore duplicate names\n      Eg: 'Web-Prod-Prod-AppName' would become 'Web-Prod-AppName'",
                "allowNo": false
              }
            },
            "args": [],
            "_globalFlags": {}
          }
        }
      },
      "commands": [
        {
          "id": "acr:list",
          "description": "describe the command here",
          "strict": true,
          "pluginName": "azgoc",
          "pluginAlias": "azgoc",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "<%= config.bin %> <%= command.id %>"
          ],
          "flags": {},
          "args": [],
          "_globalFlags": {}
        },
        {
          "id": "acr:repos:list",
          "description": "Get all container vulnerabilities",
          "strict": true,
          "pluginName": "azgoc",
          "pluginAlias": "azgoc",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "<%= config.bin %> <%= command.id %>"
          ],
          "flags": {
            "acrRegistry": {
              "name": "acrRegistry",
              "type": "option",
              "char": "a",
              "description": "ACR registry to use",
              "required": true,
              "multiple": false
            },
            "outfile": {
              "name": "outfile",
              "type": "option",
              "char": "o",
              "description": "Save output to file",
              "multiple": false
            },
            "includeManifests": {
              "name": "includeManifests",
              "type": "boolean",
              "char": "m",
              "description": "Include manifests in output",
              "allowNo": false
            },
            "resyncData": {
              "name": "resyncData",
              "type": "boolean",
              "char": "r",
              "description": "Resync data from Azure",
              "allowNo": false
            }
          },
          "args": [],
          "_globalFlags": {}
        },
        {
          "id": "acr:vulns",
          "description": "Get all vulnerabilities related to container images",
          "strict": true,
          "pluginName": "azgoc",
          "pluginAlias": "azgoc",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "<%= config.bin %> <%= command.id %>"
          ],
          "flags": {
            "subscriptionId": {
              "name": "subscriptionId",
              "type": "option",
              "char": "s",
              "description": "\n      Subscription ID to use.\n      If not supplied, will use current active Azure CLI subscription.",
              "multiple": false,
              "default": "23310d40-a0d5-4446-8433-d0e6b151c2ab"
            },
            "outfile": {
              "name": "outfile",
              "type": "option",
              "char": "o",
              "description": "Save output to file",
              "multiple": false
            },
            "resyncData": {
              "name": "resyncData",
              "type": "boolean",
              "char": "r",
              "description": "Resync data from Azure",
              "allowNo": false
            },
            "showCounts": {
              "name": "showCounts",
              "type": "option",
              "char": "c",
              "description": "Only display counts of vulnerabilities, grouped by provided countByAttribute\n      Possible attributes include:\n      repository: Group by repository name\n      category: Can group by values such as 'Windows', 'Ubuntu', 'Debian', etc.\n      severity: Severity of vulnerability, such as 'High', 'Medium', 'Low', etc.\n      patchable: Whether or not the vulnerability is patchable\n      os: Operating System of affected container. e.g. 'Windows', 'Linux'\n      osDetails: Operating System details, e.g. 'Windows Server 2016', 'Ubuntu 16.04', etc.\n      imageDigest: Group by image digest\n      ",
              "multiple": false
            }
          },
          "args": [],
          "_globalFlags": {}
        },
        {
          "id": "generate:azure:app",
          "description": "Create Azure pipeline and armconfig files from template",
          "strict": true,
          "pluginName": "azgoc",
          "pluginAlias": "azgoc",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "<%= config.bin %> <%= command.id %>"
          ],
          "flags": {
            "name": {
              "name": "name",
              "type": "option",
              "char": "n",
              "description": "Name of Application",
              "multiple": false
            }
          },
          "args": [],
          "_globalFlags": {}
        },
        {
          "id": "generate:azure:platform",
          "description": "Create Azure pipeline and armconfig files from template",
          "strict": true,
          "pluginName": "azgoc",
          "pluginAlias": "azgoc",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "<%= config.bin %> <%= command.id %>"
          ],
          "flags": {
            "name": {
              "name": "name",
              "type": "option",
              "char": "n",
              "description": "Name of application",
              "required": true,
              "multiple": false
            },
            "subscriptionId": {
              "name": "subscriptionId",
              "type": "option",
              "char": "s",
              "description": "\n      Subscription ID to use.\n      If not supplied, will use current active Azure CLI subscription.",
              "multiple": false,
              "default": "23310d40-a0d5-4446-8433-d0e6b151c2ab"
            },
            "appEnvironemnts": {
              "name": "appEnvironemnts",
              "type": "option",
              "char": "e",
              "description": "Comma separated list of application environments to build.\n      Eg: dev,prod\n      At least one is required as this creates the pipeline and\n      variable files per environment provided",
              "required": true,
              "multiple": false
            },
            "baseName": {
              "name": "baseName",
              "type": "option",
              "char": "b",
              "description": "Base name of the application.\n      Eg: \"DMZ\" or \"PROD\".\n      Creates naming convention of <baseName>-<envName>-<subEnv>-<appName>\n      If not specified, will be left out of the resource names",
              "multiple": false
            },
            "subEnvironments": {
              "name": "subEnvironments",
              "type": "option",
              "char": "d",
              "description": "Sub Environment of the application.\n      Eg: \"NonProd\" or \"Prod\".\n      Can be used for creating names such as:\n      Web-NonProd-Dev-AppName\n      Web-NonProd-Test-AppName\n      Web-Prod-Prod-AppName\n      Creates naming convention of <baseName>-<envName>-<subEnv>-<appName>\n      If not specified, will be left out of the resource names",
              "multiple": false
            },
            "ignoreDuplicates": {
              "name": "ignoreDuplicates",
              "type": "boolean",
              "char": "i",
              "description": "Ignore duplicate names\n      Eg: 'Web-Prod-Prod-AppName' would become 'Web-Prod-AppName'",
              "allowNo": false
            }
          },
          "args": [],
          "_globalFlags": {}
        },
        {
          "id": "subs",
          "description": "Display current configured Azure CLI subscriptions",
          "strict": true,
          "pluginName": "azgoc",
          "pluginAlias": "azgoc",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "azgoc subs",
            "azgoc subs --setActive"
          ],
          "flags": {
            "setActive": {
              "name": "setActive",
              "type": "boolean",
              "char": "s",
              "description": "Set active subscription for Azure CLI",
              "allowNo": false
            }
          },
          "args": [],
          "_globalFlags": {}
        }
      ]
    },
    {
      "options": {
        "type": "core",
        "root": "/Users/jercle/git/azgo/azgoc",
        "name": "@oclif/plugin-commands"
      },
      "_base": "@oclif/core@1.9.3",
      "valid": true,
      "alreadyLoaded": false,
      "children": [],
      "warned": false,
      "type": "core",
      "root": "/Users/jercle/git/azgo/azgoc/node_modules/@oclif/plugin-commands",
      "pjson": {
        "name": "@oclif/plugin-commands",
        "description": "plugin to show the list of all the commands",
        "version": "2.2.0",
        "author": "Salesforce",
        "bugs": "https://github.com/oclif/plugin-commands/issues",
        "dependencies": {
          "@oclif/core": "^1.2.0",
          "lodash": "^4.17.11"
        },
        "devDependencies": {
          "@oclif/plugin-help": "^5.1.7",
          "@oclif/test": "^2.0.2",
          "@types/chai": "^4.1.6",
          "@types/lodash": "^4.14.117",
          "@types/mocha": "^8.0.0",
          "@types/nock": "^11.1.0",
          "@types/node": "^14.0.14",
          "chai": "^4.2.0",
          "eslint": "^7.3.1",
          "eslint-config-oclif": "^3.1.0",
          "eslint-config-oclif-typescript": "^0.2.0",
          "globby": "^11",
          "mocha": "^8",
          "nock": "^13.0.0",
          "nyc": "^15.1.0",
          "oclif": "^2.3.0",
          "shx": "^0.3.3",
          "ts-node": "^9.1.1",
          "tslib": "^2.0.0",
          "typescript": "4.4.3"
        },
        "engines": {
          "node": ">=12.0.0"
        },
        "files": [
          "/lib",
          "/oclif.manifest.json",
          "/yarn.lock"
        ],
        "homepage": "https://github.com/oclif/plugin-commands",
        "keywords": [
          "oclif-plugin"
        ],
        "license": "MIT",
        "oclif": {
          "commands": "./lib/commands",
          "bin": "oclif-example",
          "devPlugins": [
            "@oclif/plugin-help"
          ]
        },
        "repository": "oclif/plugin-commands",
        "scripts": {
          "lint": "eslint . --ext .ts --config .eslintrc",
          "pretest": "yarn build && tsc -p test --noEmit",
          "test": "mocha --forbid-only \"test/**/*.test.ts\"",
          "posttest": "yarn lint",
          "prepack": "shx rm -rf lib && tsc && oclif manifest . && oclif readme",
          "postpack": "shx rm -f oclif.manifest.json",
          "version": "oclif readme && git add README.md",
          "build": "shx rm -rf lib && tsc"
        }
      },
      "name": "@oclif/plugin-commands",
      "alias": "@oclif/plugin-commands",
      "version": "2.2.0",
      "hooks": {},
      "manifest": {
        "version": "2.2.0",
        "commands": {
          "commands": {
            "id": "commands",
            "description": "list all the commands",
            "strict": true,
            "pluginName": "@oclif/plugin-commands",
            "pluginAlias": "@oclif/plugin-commands",
            "pluginType": "core",
            "aliases": [],
            "flags": {
              "json": {
                "name": "json",
                "type": "boolean",
                "description": "Format output as json.",
                "helpGroup": "GLOBAL",
                "allowNo": false
              },
              "help": {
                "name": "help",
                "type": "boolean",
                "char": "h",
                "description": "Show CLI help.",
                "allowNo": false
              },
              "hidden": {
                "name": "hidden",
                "type": "boolean",
                "description": "show hidden commands",
                "allowNo": false
              },
              "tree": {
                "name": "tree",
                "type": "boolean",
                "description": "show tree of commands",
                "allowNo": false
              },
              "columns": {
                "name": "columns",
                "type": "option",
                "description": "only show provided columns (comma-separated)",
                "multiple": false,
                "exclusive": [
                  "extended"
                ]
              },
              "sort": {
                "name": "sort",
                "type": "option",
                "description": "property to sort by (prepend '-' for descending)",
                "multiple": false
              },
              "filter": {
                "name": "filter",
                "type": "option",
                "description": "filter property by partial string matching, ex: name=foo",
                "multiple": false
              },
              "csv": {
                "name": "csv",
                "type": "boolean",
                "description": "output is csv format [alias: --output=csv]",
                "allowNo": false,
                "exclusive": [
                  "no-truncate"
                ]
              },
              "output": {
                "name": "output",
                "type": "option",
                "description": "output in a more machine friendly format",
                "multiple": false,
                "options": [
                  "csv",
                  "json",
                  "yaml"
                ],
                "exclusive": [
                  "no-truncate",
                  "csv"
                ]
              },
              "extended": {
                "name": "extended",
                "type": "boolean",
                "char": "x",
                "description": "show extra columns",
                "allowNo": false,
                "exclusive": [
                  "columns"
                ]
              },
              "no-truncate": {
                "name": "no-truncate",
                "type": "boolean",
                "description": "do not truncate output to fit screen",
                "allowNo": false,
                "exclusive": [
                  "csv"
                ]
              },
              "no-header": {
                "name": "no-header",
                "type": "boolean",
                "description": "hide table header from output",
                "allowNo": false,
                "exclusive": [
                  "csv"
                ]
              }
            },
            "args": [],
            "enableJsonFlag": true
          }
        }
      },
      "commands": [
        {
          "id": "commands",
          "description": "list all the commands",
          "strict": true,
          "pluginName": "@oclif/plugin-commands",
          "pluginAlias": "@oclif/plugin-commands",
          "pluginType": "core",
          "aliases": [],
          "flags": {
            "json": {
              "name": "json",
              "type": "boolean",
              "description": "Format output as json.",
              "helpGroup": "GLOBAL",
              "allowNo": false
            },
            "help": {
              "name": "help",
              "type": "boolean",
              "char": "h",
              "description": "Show CLI help.",
              "allowNo": false
            },
            "hidden": {
              "name": "hidden",
              "type": "boolean",
              "description": "show hidden commands",
              "allowNo": false
            },
            "tree": {
              "name": "tree",
              "type": "boolean",
              "description": "show tree of commands",
              "allowNo": false
            },
            "columns": {
              "name": "columns",
              "type": "option",
              "description": "only show provided columns (comma-separated)",
              "multiple": false,
              "exclusive": [
                "extended"
              ]
            },
            "sort": {
              "name": "sort",
              "type": "option",
              "description": "property to sort by (prepend '-' for descending)",
              "multiple": false
            },
            "filter": {
              "name": "filter",
              "type": "option",
              "description": "filter property by partial string matching, ex: name=foo",
              "multiple": false
            },
            "csv": {
              "name": "csv",
              "type": "boolean",
              "description": "output is csv format [alias: --output=csv]",
              "allowNo": false,
              "exclusive": [
                "no-truncate"
              ]
            },
            "output": {
              "name": "output",
              "type": "option",
              "description": "output in a more machine friendly format",
              "multiple": false,
              "options": [
                "csv",
                "json",
                "yaml"
              ],
              "exclusive": [
                "no-truncate",
                "csv"
              ]
            },
            "extended": {
              "name": "extended",
              "type": "boolean",
              "char": "x",
              "description": "show extra columns",
              "allowNo": false,
              "exclusive": [
                "columns"
              ]
            },
            "no-truncate": {
              "name": "no-truncate",
              "type": "boolean",
              "description": "do not truncate output to fit screen",
              "allowNo": false,
              "exclusive": [
                "csv"
              ]
            },
            "no-header": {
              "name": "no-header",
              "type": "boolean",
              "description": "hide table header from output",
              "allowNo": false,
              "exclusive": [
                "csv"
              ]
            }
          },
          "args": [],
          "enableJsonFlag": true
        }
      ]
    },
    {
      "options": {
        "type": "core",
        "root": "/Users/jercle/git/azgo/azgoc",
        "name": "@oclif/plugin-plugins"
      },
      "_base": "@oclif/core@1.9.3",
      "valid": true,
      "alreadyLoaded": false,
      "children": [],
      "warned": false,
      "type": "core",
      "root": "/Users/jercle/git/azgo/azgoc/node_modules/@oclif/plugin-plugins",
      "pjson": {
        "name": "@oclif/plugin-plugins",
        "description": "plugins plugin for oclif",
        "version": "2.1.0",
        "author": "Salesforce",
        "bugs": "https://github.com/oclif/plugin-plugins/issues",
        "dependencies": {
          "@oclif/color": "^1.0.1",
          "@oclif/core": "^1.2.0",
          "chalk": "^4.1.2",
          "debug": "^4.1.0",
          "fs-extra": "^9.0",
          "http-call": "^5.2.2",
          "load-json-file": "^5.3.0",
          "npm-run-path": "^4.0.1",
          "semver": "^7.3.2",
          "tslib": "^2.0.0",
          "yarn": "^1.22.17"
        },
        "devDependencies": {
          "@commitlint/config-conventional": "^12.1.4",
          "@oclif/plugin-help": "^5.1.10",
          "@oclif/test": "^2.0.3",
          "@types/chai": "^4.3.0",
          "@types/fs-extra": "^9.0",
          "@types/mocha": "^8.2.3",
          "@types/node": "^14.18.3",
          "@types/semver": "^7.3.9",
          "@types/supports-color": "^7.2.0",
          "chai": "^4.2.0",
          "commitlint": "^12.1.4",
          "eslint": "^7.31.0",
          "eslint-config-oclif": "^4",
          "eslint-config-oclif-typescript": "^1.0.2",
          "fancy-test": "^2.0.0",
          "globby": "^11.0.1",
          "husky": "6",
          "mocha": "^9.1.3",
          "nock": "^13.2.1",
          "oclif": "^2.3.0",
          "ts-node": "^10.4.0",
          "typescript": "4.5.4"
        },
        "engines": {
          "node": ">=12.0.0"
        },
        "files": [
          "oclif.manifest.json",
          "/lib"
        ],
        "homepage": "https://github.com/oclif/plugin-plugins",
        "keywords": [
          "oclif-plugin"
        ],
        "license": "MIT",
        "main": "lib/index.js",
        "oclif": {
          "commands": "./lib/commands",
          "scope": "heroku-cli",
          "hooks": {
            "update": "./lib/hooks/update.js"
          },
          "devPlugins": [
            "@oclif/plugin-help"
          ],
          "aliases": {
            "aliasme": "oclif-debug"
          },
          "bin": "mycli"
        },
        "repository": "oclif/plugin-plugins",
        "scripts": {
          "build": "rm -rf lib && tsc",
          "commitlint": "commitlint",
          "clean": "rm -f oclif.manifest.json",
          "lint": "eslint . --ext .ts --config .eslintrc",
          "pretest": "yarn build && tsc -p test --noEmit",
          "test": "mocha --forbid-only \"test/**/*.test.ts\"",
          "posttest": "yarn lint",
          "prepublishOnly": "yarn run build && oclif manifest . && oclif readme",
          "postpublish": "yarn run clean",
          "preversion": "yarn run clean",
          "version": "oclif readme && git add README.md"
        },
        "types": "lib/index.d.ts"
      },
      "name": "@oclif/plugin-plugins",
      "alias": "@oclif/plugin-plugins",
      "version": "2.1.0",
      "hooks": {
        "update": [
          "./lib/hooks/update.js"
        ]
      },
      "manifest": {
        "version": "2.1.0",
        "commands": {
          "plugins": {
            "id": "plugins",
            "description": "List installed plugins.",
            "strict": true,
            "pluginName": "@oclif/plugin-plugins",
            "pluginAlias": "@oclif/plugin-plugins",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "$ <%- config.bin %> plugins"
            ],
            "flags": {
              "core": {
                "name": "core",
                "type": "boolean",
                "description": "Show core plugins.",
                "allowNo": false
              }
            },
            "args": []
          },
          "plugins:inspect": {
            "id": "plugins:inspect",
            "description": "Displays installation properties of a plugin.",
            "strict": false,
            "usage": "plugins:inspect PLUGIN...",
            "pluginName": "@oclif/plugin-plugins",
            "pluginAlias": "@oclif/plugin-plugins",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "$ <%= config.bin %> plugins:inspect <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
            ],
            "flags": {
              "help": {
                "name": "help",
                "type": "boolean",
                "char": "h",
                "description": "Show CLI help.",
                "allowNo": false
              },
              "verbose": {
                "name": "verbose",
                "type": "boolean",
                "char": "v",
                "allowNo": false
              }
            },
            "args": [
              {
                "name": "plugin",
                "description": "Plugin to inspect.",
                "required": true,
                "default": "."
              }
            ]
          },
          "plugins:install": {
            "id": "plugins:install",
            "description": "Installs a plugin into the CLI.\nCan be installed from npm or a git url.\n\nInstallation of a user-installed plugin will override a core plugin.\n\ne.g. If you have a core plugin that has a 'hello' command, installing a user-installed plugin with a 'hello' command will override the core plugin implementation. This is useful if a user needs to update core plugin functionality in the CLI without the need to patch and update the whole CLI.\n",
            "strict": false,
            "usage": "plugins:install PLUGIN...",
            "pluginName": "@oclif/plugin-plugins",
            "pluginAlias": "@oclif/plugin-plugins",
            "pluginType": "core",
            "aliases": [
              "plugins:add"
            ],
            "examples": [
              "$ <%= config.bin %> plugins:install <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> ",
              "$ <%= config.bin %> plugins:install https://github.com/someuser/someplugin",
              "$ <%= config.bin %> plugins:install someuser/someplugin"
            ],
            "flags": {
              "help": {
                "name": "help",
                "type": "boolean",
                "char": "h",
                "description": "Show CLI help.",
                "allowNo": false
              },
              "verbose": {
                "name": "verbose",
                "type": "boolean",
                "char": "v",
                "allowNo": false
              },
              "force": {
                "name": "force",
                "type": "boolean",
                "char": "f",
                "description": "Run yarn install with force flag.",
                "allowNo": false
              }
            },
            "args": [
              {
                "name": "plugin",
                "description": "Plugin to install.",
                "required": true
              }
            ]
          },
          "plugins:link": {
            "id": "plugins:link",
            "description": "Links a plugin into the CLI for development.\nInstallation of a linked plugin will override a user-installed or core plugin.\n\ne.g. If you have a user-installed or core plugin that has a 'hello' command, installing a linked plugin with a 'hello' command will override the user-installed or core plugin implementation. This is useful for development work.\n",
            "strict": true,
            "usage": "plugins:link PLUGIN",
            "pluginName": "@oclif/plugin-plugins",
            "pluginAlias": "@oclif/plugin-plugins",
            "pluginType": "core",
            "aliases": [],
            "examples": [
              "$ <%= config.bin %> plugins:link <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
            ],
            "flags": {
              "help": {
                "name": "help",
                "type": "boolean",
                "char": "h",
                "description": "Show CLI help.",
                "allowNo": false
              },
              "verbose": {
                "name": "verbose",
                "type": "boolean",
                "char": "v",
                "allowNo": false
              }
            },
            "args": [
              {
                "name": "path",
                "description": "path to plugin",
                "required": true,
                "default": "."
              }
            ]
          },
          "plugins:uninstall": {
            "id": "plugins:uninstall",
            "description": "Removes a plugin from the CLI.",
            "strict": true,
            "usage": "plugins:uninstall PLUGIN...",
            "pluginName": "@oclif/plugin-plugins",
            "pluginAlias": "@oclif/plugin-plugins",
            "pluginType": "core",
            "aliases": [
              "plugins:unlink",
              "plugins:remove"
            ],
            "flags": {
              "help": {
                "name": "help",
                "type": "boolean",
                "char": "h",
                "description": "Show CLI help.",
                "allowNo": false
              },
              "verbose": {
                "name": "verbose",
                "type": "boolean",
                "char": "v",
                "allowNo": false
              }
            },
            "args": [
              {
                "name": "plugin",
                "description": "plugin to uninstall"
              }
            ],
            "help": "\n  Example:\n    $ <%- config.bin %> plugins:uninstall <%- config.pjson.oclif.examplePlugin || \"myplugin\" %>\n  ",
            "variableArgs": true
          },
          "plugins:update": {
            "id": "plugins:update",
            "description": "Update installed plugins.",
            "strict": true,
            "pluginName": "@oclif/plugin-plugins",
            "pluginAlias": "@oclif/plugin-plugins",
            "pluginType": "core",
            "aliases": [],
            "flags": {
              "help": {
                "name": "help",
                "type": "boolean",
                "char": "h",
                "description": "Show CLI help.",
                "allowNo": false
              },
              "verbose": {
                "name": "verbose",
                "type": "boolean",
                "char": "v",
                "allowNo": false
              }
            },
            "args": [],
            "topic": "plugins",
            "command": "update"
          }
        }
      },
      "commands": [
        {
          "id": "plugins",
          "description": "List installed plugins.",
          "strict": true,
          "pluginName": "@oclif/plugin-plugins",
          "pluginAlias": "@oclif/plugin-plugins",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "$ <%- config.bin %> plugins"
          ],
          "flags": {
            "core": {
              "name": "core",
              "type": "boolean",
              "description": "Show core plugins.",
              "allowNo": false
            }
          },
          "args": []
        },
        {
          "id": "plugins:inspect",
          "description": "Displays installation properties of a plugin.",
          "strict": false,
          "usage": "plugins:inspect PLUGIN...",
          "pluginName": "@oclif/plugin-plugins",
          "pluginAlias": "@oclif/plugin-plugins",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "$ <%= config.bin %> plugins:inspect <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
          ],
          "flags": {
            "help": {
              "name": "help",
              "type": "boolean",
              "char": "h",
              "description": "Show CLI help.",
              "allowNo": false
            },
            "verbose": {
              "name": "verbose",
              "type": "boolean",
              "char": "v",
              "allowNo": false
            }
          },
          "args": [
            {
              "name": "plugin",
              "description": "Plugin to inspect.",
              "required": true,
              "default": "."
            }
          ]
        },
        {
          "id": "plugins:install",
          "description": "Installs a plugin into the CLI.\nCan be installed from npm or a git url.\n\nInstallation of a user-installed plugin will override a core plugin.\n\ne.g. If you have a core plugin that has a 'hello' command, installing a user-installed plugin with a 'hello' command will override the core plugin implementation. This is useful if a user needs to update core plugin functionality in the CLI without the need to patch and update the whole CLI.\n",
          "strict": false,
          "usage": "plugins:install PLUGIN...",
          "pluginName": "@oclif/plugin-plugins",
          "pluginAlias": "@oclif/plugin-plugins",
          "pluginType": "core",
          "aliases": [
            "plugins:add"
          ],
          "examples": [
            "$ <%= config.bin %> plugins:install <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> ",
            "$ <%= config.bin %> plugins:install https://github.com/someuser/someplugin",
            "$ <%= config.bin %> plugins:install someuser/someplugin"
          ],
          "flags": {
            "help": {
              "name": "help",
              "type": "boolean",
              "char": "h",
              "description": "Show CLI help.",
              "allowNo": false
            },
            "verbose": {
              "name": "verbose",
              "type": "boolean",
              "char": "v",
              "allowNo": false
            },
            "force": {
              "name": "force",
              "type": "boolean",
              "char": "f",
              "description": "Run yarn install with force flag.",
              "allowNo": false
            }
          },
          "args": [
            {
              "name": "plugin",
              "description": "Plugin to install.",
              "required": true
            }
          ]
        },
        {
          "id": "plugins:link",
          "description": "Links a plugin into the CLI for development.\nInstallation of a linked plugin will override a user-installed or core plugin.\n\ne.g. If you have a user-installed or core plugin that has a 'hello' command, installing a linked plugin with a 'hello' command will override the user-installed or core plugin implementation. This is useful for development work.\n",
          "strict": true,
          "usage": "plugins:link PLUGIN",
          "pluginName": "@oclif/plugin-plugins",
          "pluginAlias": "@oclif/plugin-plugins",
          "pluginType": "core",
          "aliases": [],
          "examples": [
            "$ <%= config.bin %> plugins:link <%- config.pjson.oclif.examplePlugin || \"myplugin\" %> "
          ],
          "flags": {
            "help": {
              "name": "help",
              "type": "boolean",
              "char": "h",
              "description": "Show CLI help.",
              "allowNo": false
            },
            "verbose": {
              "name": "verbose",
              "type": "boolean",
              "char": "v",
              "allowNo": false
            }
          },
          "args": [
            {
              "name": "path",
              "description": "path to plugin",
              "required": true,
              "default": "."
            }
          ]
        },
        {
          "id": "plugins:uninstall",
          "description": "Removes a plugin from the CLI.",
          "strict": true,
          "usage": "plugins:uninstall PLUGIN...",
          "pluginName": "@oclif/plugin-plugins",
          "pluginAlias": "@oclif/plugin-plugins",
          "pluginType": "core",
          "aliases": [
            "plugins:unlink",
            "plugins:remove"
          ],
          "flags": {
            "help": {
              "name": "help",
              "type": "boolean",
              "char": "h",
              "description": "Show CLI help.",
              "allowNo": false
            },
            "verbose": {
              "name": "verbose",
              "type": "boolean",
              "char": "v",
              "allowNo": false
            }
          },
          "args": [
            {
              "name": "plugin",
              "description": "plugin to uninstall"
            }
          ],
          "help": "\n  Example:\n    $ <%- config.bin %> plugins:uninstall <%- config.pjson.oclif.examplePlugin || \"myplugin\" %>\n  ",
          "variableArgs": true
        },
        {
          "id": "plugins:update",
          "description": "Update installed plugins.",
          "strict": true,
          "pluginName": "@oclif/plugin-plugins",
          "pluginAlias": "@oclif/plugin-plugins",
          "pluginType": "core",
          "aliases": [],
          "flags": {
            "help": {
              "name": "help",
              "type": "boolean",
              "char": "h",
              "description": "Show CLI help.",
              "allowNo": false
            },
            "verbose": {
              "name": "verbose",
              "type": "boolean",
              "char": "v",
              "allowNo": false
            }
          },
          "args": [],
          "topic": "plugins",
          "command": "update"
        }
      ]
    },
    {
      "options": {
        "type": "core",
        "root": "/Users/jercle/git/azgo/azgoc",
        "name": "@oclif/plugin-help"
      },
      "_base": "@oclif/core@1.9.3",
      "valid": true,
      "alreadyLoaded": false,
      "children": [],
      "warned": false,
      "type": "core",
      "root": "/Users/jercle/git/azgo/azgoc/node_modules/@oclif/plugin-help",
      "pjson": {
        "name": "@oclif/plugin-help",
        "description": "Standard help for oclif.",
        "version": "5.1.12",
        "author": "Salesforce",
        "bugs": "https://github.com/oclif/plugin-help/issues",
        "dependencies": {
          "@oclif/core": "^1.3.6"
        },
        "devDependencies": {
          "@oclif/plugin-plugins": "^2.1.0",
          "@oclif/test": "^2.1.0",
          "@types/chai": "^4.3.0",
          "@types/mocha": "^9.1.0",
          "chai": "^4.3.6",
          "eslint": "^7.3.1",
          "eslint-config-oclif": "^4.0.0",
          "eslint-config-oclif-typescript": "^1.0.2",
          "mocha": "^9.2.1",
          "oclif": "^2.5.0",
          "shx": "^0.3.4",
          "ts-node": "^9.1.1",
          "typescript": "^4.6.2"
        },
        "engines": {
          "node": ">=12.0.0"
        },
        "files": [
          "oclif.manifest.json",
          "/lib"
        ],
        "homepage": "https://github.com/oclif/plugin-help",
        "keywords": [
          "oclif-plugin"
        ],
        "license": "MIT",
        "main": "./lib/index.js",
        "oclif": {
          "commands": "./lib/commands",
          "bin": "oclif",
          "devPlugins": [
            "@oclif/plugin-plugins"
          ]
        },
        "repository": "oclif/plugin-help",
        "scripts": {
          "build": "shx rm -rf lib && tsc",
          "lint": "eslint . --ext .ts --config .eslintrc",
          "pretest": "yarn build && tsc --noEmit",
          "test": "mocha --forbid-only \"test/**/*.test.ts\"",
          "posttest": "yarn lint",
          "prepack": "yarn run build && oclif manifest .",
          "postpack": "shx rm oclif.manifest.json"
        },
        "types": "./lib/index.d.ts"
      },
      "name": "@oclif/plugin-help",
      "alias": "@oclif/plugin-help",
      "version": "5.1.12",
      "hooks": {},
      "manifest": {
        "version": "5.1.12",
        "commands": {
          "help": {
            "id": "help",
            "description": "Display help for <%= config.bin %>.",
            "strict": false,
            "pluginName": "@oclif/plugin-help",
            "pluginAlias": "@oclif/plugin-help",
            "pluginType": "core",
            "aliases": [],
            "flags": {
              "nested-commands": {
                "name": "nested-commands",
                "type": "boolean",
                "char": "n",
                "description": "Include all nested commands in the output.",
                "allowNo": false
              }
            },
            "args": [
              {
                "name": "command",
                "description": "Command to show help for.",
                "required": false
              }
            ],
            "_globalFlags": {}
          }
        }
      },
      "commands": [
        {
          "id": "help",
          "description": "Display help for <%= config.bin %>.",
          "strict": false,
          "pluginName": "@oclif/plugin-help",
          "pluginAlias": "@oclif/plugin-help",
          "pluginType": "core",
          "aliases": [],
          "flags": {
            "nested-commands": {
              "name": "nested-commands",
              "type": "boolean",
              "char": "n",
              "description": "Include all nested commands in the output.",
              "allowNo": false
            }
          },
          "args": [
            {
              "name": "command",
              "description": "Command to show help for.",
              "required": false
            }
          ],
          "_globalFlags": {}
        }
      ]
    }
  ],
  "topicSeparator": " ",
  "warned": false,
  "commandPermutations": {
    "validPermutations": {}
  },
  "topicPermutations": {
    "validPermutations": {}
  },
  "_commands": {},
  "_topics": {},
  "root": "/Users/jercle/git/azgo/azgoc",
  "pjson": {
    "name": "azgoc",
    "version": "0.0.0",
    "description": "oclif rebuild of azgo cli, previously using yargs",
    "author": "Evan Colwell @jercle",
    "bin": {
      "azgoc": "./bin/run.cjs"
    },
    "homepage": "https://github.com/jercle/azgo",
    "license": "MIT",
    "main": "dist/index.js",
    "repository": "jercle/azgo",
    "type": "module",
    "files": [
      "/bin",
      "/dist",
      "/npm-shrinkwrap.json",
      "/oclif.manifest.json"
    ],
    "dependencies": {
      "@azure/container-registry": "^1.0.0",
      "@azure/identity": "^2.0.5",
      "@oclif/core": "^1",
      "@oclif/plugin-commands": "^2.2.0",
      "@oclif/plugin-help": "^5",
      "@oclif/plugin-plugins": "^2.0.1",
      "chalk": "^5.0.1",
      "date-fns": "^2.28.0",
      "esm": "^3.2.25",
      "inquirer": "^9.0.0",
      "moment": "^2.29.3",
      "yaml": "^2.1.1",
      "yeoman-environment": "^3.9.1"
    },
    "devDependencies": {
      "@oclif/test": "^2",
      "@types/chai": "^4",
      "@types/inquirer": "^8.2.1",
      "@types/mocha": "^9.0.0",
      "@types/node": "^16.9.4",
      "chai": "^4",
      "eslint": "^7.32.0",
      "eslint-config-oclif": "^4",
      "eslint-config-oclif-typescript": "^1.0.2",
      "globby": "^11",
      "mocha": "^9",
      "oclif": "^3",
      "shx": "^0.3.3",
      "ts-node": "^10.2.1",
      "tslib": "^2.3.1",
      "typescript": "^4.4.3"
    },
    "oclif": {
      "bin": "azgoc",
      "dirname": "azgoc",
      "commands": "./dist/commands",
      "additionalHelpFlags": [
        "-h"
      ],
      "plugins": [
        "@oclif/plugin-help",
        "@oclif/plugin-plugins",
        "@oclif/plugin-commands"
      ],
      "topicSeparator": " ",
      "topics": {},
      "hooks": {
        "init": "./dist/hooks/init/auth"
      },
      "update": {
        "node": {},
        "s3": {
          "templates": {
            "target": {
              "baseDir": "<%- bin %>",
              "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>",
              "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>",
              "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>"
            },
            "vanilla": {
              "unversioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>",
              "versioned": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>",
              "baseDir": "<%- bin %>",
              "manifest": "<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version"
            }
          }
        }
      }
    },
    "scripts": {
      "build": "shx rm -rf dist && tsc -b",
      "lint": "eslint . --ext .ts --config .eslintrc",
      "postpack": "shx rm -f oclif.manifest.json",
      "posttest": "yarn lint",
      "prepack": "yarn build && oclif manifest && oclif readme",
      "test": "mocha --forbid-only \"test/**/*.test.ts\"",
      "version": "oclif readme && git add README.md"
    },
    "engines": {
      "node": ">=12.0.0"
    },
    "bugs": "https://github.com/jercle/azgo/issues",
    "keywords": [
      "oclif"
    ],
    "types": "dist/index.d.ts"
  },
  "name": "azgoc",
  "version": "0.0.0",
  "channel": "stable",
  "valid": true,
  "arch": "arm64",
  "platform": "darwin",
  "windows": false,
  "bin": "azgoc",
  "dirname": "azgoc",
  "flexibleTaxonomy": false,
  "userAgent": "azgoc/0.0.0 darwin-arm64 node-v18.4.0",
  "shell": "zsh",
  "home": "/Users/jercle",
  "cacheDir": "/Users/jercle/Library/Caches/azgoc",
  "configDir": "/Users/jercle/.config/azgoc",
  "dataDir": "/Users/jercle/.local/share/azgoc",
  "errlog": "/Users/jercle/Library/Caches/azgoc/error.log",
  "_commandIDs": [
    "acr:list",
    "acr:repos:list",
    "acr:vulns",
    "generate:azure:app",
    "generate:azure:platform",
    "subs",
    "commands",
    "plugins",
    "plugins:inspect",
    "plugins:install",
    "plugins:add",
    "plugins:link",
    "plugins:uninstall",
    "plugins:unlink",
    "plugins:remove",
    "plugins:update",
    "help"
  ]
}
